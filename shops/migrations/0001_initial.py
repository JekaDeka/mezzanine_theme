# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2018-02-19 13:35
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mezzanine.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shop', '0003_auto_20180219_1635'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShopProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords_string', models.CharField(blank=True, editable=False, max_length=500)),
                ('available', models.BooleanField(default=False, verbose_name='Доступен для заказа')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Добавлено')),
                ('title', models.CharField(default='', help_text='Название должно быть уникальным и описывать особенность товара.', max_length=255, verbose_name='Название')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('material', models.CharField(blank=True, default='', help_text='В точности как на бирке', max_length=255, verbose_name='Материал')),
                ('description', mezzanine.core.fields.RichTextField(default='', help_text='Как можно более подробно опишите товар.', verbose_name='Подробное описание')),
                ('condition', models.CharField(choices=[('В наличии', 'В наличии'), ('Под заказ', 'Под заказ')], default='Новое', max_length=255, verbose_name='Материал')),
                ('pre_order', models.BooleanField(default=False, help_text='Отметьте, если данный товар может отличаться от итогового варианта.', verbose_name='Для примера')),
                ('slug', models.URLField(default='', editable=False)),
                ('categories', models.ManyToManyField(blank=True, to='shop.Category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Мои товары',
            },
        ),
        migrations.CreateModel(
            name='ShopProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', mezzanine.core.fields.FileField(blank=True, help_text='Загрузите фотографии вашего товара.', max_length=255, null=True, verbose_name='Изображение')),
                ('description', models.CharField(blank=True, max_length=100, verbose_name='Описание')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shops.ShopProduct')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='UserShop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments_count', models.IntegerField(default=0, editable=False)),
                ('image', models.ImageField(default='', upload_to='tmp_images/', verbose_name='Логотип магазина')),
                ('background', models.ImageField(default='', upload_to='tmp_images/', verbose_name='Обложка магазина')),
                ('shopname', models.CharField(max_length=255, unique=True, verbose_name='Название магазина')),
                ('slug', models.URLField(default='', editable=False)),
                ('bio', mezzanine.core.fields.RichTextField(blank=True, default='', help_text='Расскажите миру о Вашем творчестве, опишите свой продукт.                         Ваш бренд и то, что вы создаете своим трудом, являются единственными в своем роде - скажите, почему!                         Расскажите о себе, чем вы были воодушевлены, когда начали заниматься своим делом, что повлияло на ваш выбор, как развивается ваше творчество сейчас.                         Какие техники, материалы вы используете для своих изделий, каких принципов придерживаетесь при создании своего бренда.                         Ваш рассказ должен быть интересным, лаконичным, информативным и убедительным. Можете упомянуть любимую цитату или вдохновляющую идею.                         Не стоит злоупотреблять смайликами и прочими символами.', verbose_name='Описание')),
                ('express_point', models.BooleanField(default=False, verbose_name='Получение в вашем пункте выдачи')),
                ('express_point_price', models.DecimalField(blank=True, decimal_places=0, default='', help_text='Оставляйте поле пустым, если стоимость будет рассчитана по запросу.', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена доставки')),
                ('express_city', models.BooleanField(default=False, verbose_name='Курьером по г. Москва')),
                ('express_city_price', models.DecimalField(blank=True, decimal_places=0, default='', help_text='Оставляйте поле пустым, если стоимость будет рассчитана по запросу.', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена доставки')),
                ('express_country', models.BooleanField(default=False, verbose_name='Курьером по стране (Российская Федерация)')),
                ('express_country_price', models.DecimalField(blank=True, decimal_places=0, default='', help_text='Оставляйте поле пустым, если стоимость будет рассчитана по запросу.', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена доставки')),
                ('express_world', models.BooleanField(default=False, verbose_name='Курьером по миру')),
                ('express_world_price', models.DecimalField(blank=True, decimal_places=0, default='', help_text='Оставляйте поле пустым, если стоимость будет рассчитана по запросу.', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена доставки')),
                ('express_mail', models.BooleanField(default=False, verbose_name='Почта России')),
                ('express_mail_price', models.DecimalField(blank=True, decimal_places=0, default='', help_text='Оставляйте поле пустым, если стоимость будет рассчитана по запросу.', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена доставки')),
                ('express_personal', models.BooleanField(default=False, verbose_name='Личная встреча')),
                ('express_personal_price', models.DecimalField(blank=True, decimal_places=0, default='', help_text='Оставляйте поле пустым, если стоимость будет рассчитана по запросу.', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена доставки')),
                ('express_other', mezzanine.core.fields.RichTextField(blank=True, default='', help_text='Адреса, по которым покупатель сможет забрать товар самостоятельно. Любые другие нюансы и условия по доставке.', verbose_name='Дополнительная информация о доставке')),
                ('payment_personal', models.BooleanField(default=False, verbose_name='Наличными при получении')),
                ('payment_bank_transfer', models.BooleanField(default=False, verbose_name='Банковский перевод')),
                ('payment_card_transfer', models.BooleanField(default=False, verbose_name='Банковская карта')),
                ('payment_other', mezzanine.core.fields.RichTextField(blank=True, default='', help_text='Опишите любые другие условия и важные моменты по оплате — покупателю будет проще принять решение о покупке в вашем магазине.', verbose_name='Дополнительная информация об оплате')),
                ('rules', mezzanine.core.fields.RichTextField(blank=True, default='', help_text='Обозначьте условия возврата товаров. В течение какого времени после получения товара покупатель может обратиться?                           Если вы не принимаете возвраты или обмены, чётко укажите на это, чтобы избежать споров в случае желания покупателя отказаться от покупки.', verbose_name='Дополнительная информация об оплате')),
                ('on_vacation', models.BooleanField(default=False, editable=False, verbose_name='На каникулах')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shop', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Все магазины',
            },
        ),
        migrations.CreateModel(
            name='UserShopDeliveryOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('label', models.CharField(max_length=255, verbose_name='Вид доставки')),
                ('price', models.PositiveIntegerField(null=True, verbose_name='Цена')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveryoptions', to='shops.UserShop', verbose_name='Магазин')),
            ],
        ),
        migrations.AddField(
            model_name='shopproduct',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shops.UserShop', verbose_name='Магазин'),
        ),
    ]
