# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-05-12 16:40
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mezzanine.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shop', '0005_auto_20180302_1651'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Last updated')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='Покупатель')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.IntegerField(default=0, verbose_name='true_product_id')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('total_price', models.PositiveIntegerField(default=0, verbose_name='Общая сумма')),
                ('image', models.CharField(max_length=200, null=True)),
                ('url', models.CharField(max_length=2000)),
                ('shop_id', models.IntegerField(default=0, verbose_name='shop_id')),
                ('shop_image', models.CharField(max_length=200, null=True)),
                ('shop_slug', models.CharField(max_length=255)),
                ('shop_name', models.CharField(max_length=255)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shops.Cart')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Новый'), (2, 'В обработке'), (3, 'Завершен'), (4, 'Отменен')], default=1, verbose_name='Status')),
                ('time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Time')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('user_first_name', models.CharField(max_length=255, verbose_name='First name')),
                ('user_middle_name', models.CharField(blank=True, max_length=255, verbose_name='Отчество')),
                ('user_last_name', models.CharField(max_length=255, verbose_name='Last name')),
                ('user_phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('user_email', models.EmailField(max_length=255, verbose_name='Email')),
                ('user_country', models.CharField(max_length=100, verbose_name='Country')),
                ('user_city', models.CharField(max_length=100, verbose_name='City/Suburb')),
                ('user_region', models.CharField(max_length=100, verbose_name='Регион')),
                ('shipping_type', models.CharField(default='', max_length=255, verbose_name='Доставка')),
                ('shipping_price', models.PositiveIntegerField(default=0, verbose_name='Цена доставки')),
                ('user_address', models.CharField(blank=True, help_text='Улица, дом, подъезд, квартира', max_length=255, verbose_name='Адрес')),
                ('user_postcode', models.CharField(blank=True, max_length=15, verbose_name='Zip/Postcode')),
                ('user_additional_info', models.TextField(blank=True, verbose_name='Пожелания по заказку')),
                ('item_total', models.PositiveIntegerField(default=0, verbose_name='Сумма заказа')),
                ('total', models.PositiveIntegerField(default=0, verbose_name='Всего')),
            ],
            options={
                'verbose_name': 'Заказ',
                'ordering': ('-id',),
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.IntegerField(default=0, verbose_name='true_product_id')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('total_price', models.PositiveIntegerField(default=0, verbose_name='Общая сумма')),
                ('image', models.CharField(max_length=200, null=True)),
                ('url', models.CharField(max_length=2000)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shops.Order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShopProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords_string', models.CharField(blank=True, editable=False, max_length=500)),
                ('available', models.BooleanField(default=False, verbose_name='Доступен для заказа')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Добавлено')),
                ('title', models.CharField(default='', help_text='Название должно быть уникальным и описывать особенность товара.', max_length=255, verbose_name='Название')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('material', models.CharField(blank=True, default='', help_text='В точности как на бирке', max_length=255, verbose_name='Материал')),
                ('description', mezzanine.core.fields.RichTextField(default='', help_text='Как можно более подробно опишите товар.', verbose_name='Описание')),
                ('condition', models.CharField(choices=[('finish', 'Готовая работа'), ('pre_order', 'Под заказ'), ('for_example', 'Для примера')], default='finish', help_text='Готовая работа - работа уже ждет покупателя. Под заказ - Вы можете выполнить точно такую же работу, но потребуется некоторое время. Для примера - повторить работу точь-в-точь невозможно.', max_length=15, verbose_name='Состояние')),
                ('pre_order', models.BooleanField(default=False, help_text='Удалить поле', verbose_name='Удалить')),
                ('main_image', models.CharField(blank=True, default='', max_length=255, verbose_name='Изображение')),
                ('slug', models.URLField(default='', editable=False)),
                ('categories', models.ManyToManyField(blank=True, help_text='Разместить работу можно только в одной категории.', to='shop.Category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Мои товары',
            },
        ),
        migrations.CreateModel(
            name='ShopProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', mezzanine.core.fields.FileField(blank=True, help_text='Загрузите фотографии вашего товара.', max_length=255, null=True, verbose_name='Изображение')),
                ('description', models.CharField(blank=True, max_length=100, verbose_name='Описание')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shops.ShopProduct')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='UserShop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', mezzanine.core.fields.FileField(default='', help_text='Загрузите логотип магазина.', max_length=255, verbose_name='Обложка магазина')),
                ('background', mezzanine.core.fields.FileField(default='', help_text='Загрузите обложку магазина.', max_length=255, verbose_name='Обложка магазина')),
                ('shopname', models.CharField(max_length=255, unique=True, verbose_name='Название магазина')),
                ('slug', models.URLField(default='', editable=False)),
                ('bio', mezzanine.core.fields.RichTextField(blank=True, default='', help_text='Расскажите миру о Вашем творчестве, опишите свой продукт.                         Ваш бренд и то, что вы создаете своим трудом, являются единственными в своем роде - скажите, почему!                         Расскажите о себе, чем вы были воодушевлены, когда начали заниматься своим делом, что повлияло на ваш выбор, как развивается ваше творчество сейчас.                         Какие техники, материалы вы используете для своих изделий, каких принципов придерживаетесь при создании своего бренда.                         Ваш рассказ должен быть интересным, лаконичным, информативным и убедительным. Можете упомянуть любимую цитату или вдохновляющую идею.                         Не стоит злоупотреблять смайликами и прочими символами.', verbose_name='Описание')),
                ('delivery_other', mezzanine.core.fields.RichTextField(blank=True, default='', help_text='Адреса, по которым покупатель сможет забрать товар самостоятельно. Любые другие нюансы и условия по доставке.', verbose_name='Дополнительная информация о доставке')),
                ('payment_other', mezzanine.core.fields.RichTextField(blank=True, default='', help_text='Опишите любые другие условия и важные моменты по оплате — покупателю будет проще принять решение о покупке в вашем магазине.', verbose_name='Дополнительная информация об оплате')),
                ('rules', mezzanine.core.fields.RichTextField(blank=True, default='', help_text='Обозначьте условия возврата товаров. В течение какого времени после получения товара покупатель может обратиться?                           Если вы не принимаете возвраты или обмены, чётко укажите на это, чтобы избежать споров в случае желания покупателя отказаться от покупки.', verbose_name='Правила возврата и обмена')),
                ('on_vacation', models.BooleanField(default=False, editable=False, verbose_name='На каникулах')),
            ],
            options={
                'verbose_name': 'Магазин',
                'verbose_name_plural': 'Все магазины',
            },
        ),
        migrations.CreateModel(
            name='UserShopDelivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Способ доставки')),
            ],
            options={
                'verbose_name': 'Способ доставки',
                'verbose_name_plural': 'Способы доставки',
            },
        ),
        migrations.CreateModel(
            name='UserShopPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Способ доставки')),
            ],
            options={
                'verbose_name': 'Способ оплаты',
                'verbose_name_plural': 'Способы оплаты',
            },
        ),
        migrations.AddField(
            model_name='usershop',
            name='delivery_options',
            field=models.ManyToManyField(to='shops.UserShopDelivery'),
        ),
        migrations.AddField(
            model_name='usershop',
            name='payment_options',
            field=models.ManyToManyField(to='shops.UserShopPayment', verbose_name='Способы оплаты'),
        ),
        migrations.AddField(
            model_name='usershop',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shop', to=settings.AUTH_USER_MODEL, verbose_name='Владелец'),
        ),
        migrations.AddField(
            model_name='shopproduct',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shops.UserShop', verbose_name='Магазин'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='in_orders', to='shops.ShopProduct'),
        ),
        migrations.AddField(
            model_name='order',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='shops.UserShop'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_cart', to='shops.ShopProduct'),
        ),
    ]
